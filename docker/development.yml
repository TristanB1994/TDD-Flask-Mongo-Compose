version: '3.4'

services:

  db:
    image: mongo:latest
    # container_name: mongo
    restart: always
    environment: 
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
        - ${MONGODB_PORT}:27017
    volumes:
        - ${PWD}/docker/mongo/mongodata:/data/db     
        - ${PWD}/docker/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d    
        - ${PWD}/docker/mongo/dump:/dump   
    # networks:
    #         - app-network
  # db:
  #   image: postgres
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   ports:
  #     - "${POSTGRES_PORT}:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

  web:
    build:
      context: ${PWD}
      dockerfile: docker/Dockerfile
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      FLASK_APP: ${FLASK_APP}
      APPLICATION_DB: ${APPLICATION_DB}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_PORT: ${MONGODB_PORT}
    command: ./manage.py flask run --host 0.0.0.0
    volumes:
      - ${PWD}:/opt/code
    ports:
      - "5000:5000"

