version: '3.4'

services:

  db:
    build:
      context: ${PWD}
      dockerfile: docker/mongo/Dockerfile
    # image: mongo:latest
    # container_name: mongo
    restart: unless-stopped
    environment: 
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
        - 27017
    volumes:
        - ${PWD}/docker/mongo/development/mongodata:/data/db 
        - ${PWD}/docker/mongo/development/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d    
        - ${PWD}/docker/mongo/development/dump:/dump   
    user: 1000:1000
    # networks:
    #         - app-network


  web:
    build:
      context: ${PWD}
      dockerfile: docker/Dockerfile
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      FLASK_APP: ${FLASK_APP}
      APPLICATION_DB: ${APPLICATION_DB}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_PORT: ${MONGODB_PORT}
    command: ./manage.py flask run --host 0.0.0.0
    volumes:
      - ${PWD}:/opt/code
    ports:
      - "5000:5000"

# volumes:
#   mongo:
#     name: /home/tpb/code/registry/registry/docker/mongo
    